generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId     Int @id @default(autoincrement()) @map("userId")
  email      String @unique @map("email")
  name       String @map("name")
  password   String @map("password") 
  role       String @default("APPLICANT") @map("role")
  createdAt  DateTime @default(now()) @map("createdAt")
  updatedAt  DateTime @updatedAt @map("updatedAt")
 
 // Resume로 실제 코드에서 쿼리하여 연결할 수 있음.
  RusumeLog  ResumeLogs[]
  Resumes    Resumes[]
  // 1:1 연결/ 다중 클라이언트 고려해서 1:N 설정하면 어떻게 될지 생각해보기
  refreshToken RefreshTokens?
  @@map("Users")
}

model Resumes {
  resumeId  Int @id @default(autoincrement()) @map("resumeId")
  UserId    Int @map("UserId") 
  title     String @map("title")
  content   String @map("content")
  status    String @default("APPLY") @map("status")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  // User로 실제 코드에서 쿼리하여 연결할 수 있음.
  User      Users @relation(fields: [UserId], references: [userId])
  ResumeLogs ResumeLogs[]
  @@map("Resumes")
}
model ResumeLogs {
  resumeLogId Int @id @default(autoincrement()) @map("resumeLogId")
  RecruiterId Int @map("RecruiterId")
  ResumeId    Int @map("ResumeId")
  oldStatus   String @map("oldStatus")
  newStatus   String @map("newStatus")
  reason      String @map("reason")
  createdAt   DateTime @default(now()) @map("createdAt")

  // 유저테이블을를 참조하지만 쿼리 코드 짤때 구분을 위해 Recruiter로 명명 -> Recruiter로 유저테이블 접근가능
  Recruiter   Users @relation(fields: [RecruiterId], references: [userId])
  Resume      Resumes @relation(fields: [ResumeId], references: [resumeId])
  @@map("ResumeLogs")
}
  
model RefreshTokens {
  refreshTokenId Int @id @default(autoincrement()) @map("refreshTokenId")
  UserId Int @unique @map("UserId") 
  refreshToken String @map("refreshToken")
  // 만료시간 자동생성 하는법 찾기
  expiredAt DateTime @map("expiredAt")
  createdAt DateTime @default(now()) @map("createdAt") 

  User Users @relation(fields: [UserId], references: [userId])
  @@map("RefreshTokens")
}